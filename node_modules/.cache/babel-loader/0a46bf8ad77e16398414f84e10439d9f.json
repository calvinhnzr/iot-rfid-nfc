{"ast":null,"code":"var _jsxFileName = \"/Users/calvinhnzr/Development/mandelbrotset/src/templates/SquareNumbers.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport getWindowDimensions from \"../hooks/useWindowDimensions\";\nimport Slider from \"../components/Slider\";\nimport Input from \"../components/Input\";\nimport Formula from \"../components/Formula\";\nimport IterationList from \"../components/IterationList\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledStart = styled.span`\n\tbackground-color: #363738;\n\tborder-radius: 0.2rem;\n\tpadding: 0.5rem;\n\tfont-weight: bold;\n`;\n_c = StyledStart;\n\nconst SquareNumbers = props => {\n  _s();\n\n  const [start, setStart] = useState(\"\");\n  const [array, setArray] = useState([]);\n  const {\n    width\n  } = getWindowDimensions();\n  const iterations = 4;\n  const max = 9;\n  const min = 0;\n\n  const renderInput = () => {\n    if (width >= 960) {\n      return /*#__PURE__*/_jsxDEV(Formula, {\n        color: props.color,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"x = \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          min: \"1\",\n          max: \"9\",\n          placeholder: \"int\",\n          value: start,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Formula, {\n          color: props.color,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"x = \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(StyledStart, {\n              children: start > 0 ? start : /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#8e8e8e\"\n                },\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          min: min,\n          max: max,\n          step: \"1\",\n          value: start,\n          setStart: setStart,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    if (e.target.value.toString().length <= 1) setStart(e.target.value);\n\n    if (e.target.value.toString().length <= 1) {\n      setArray([Math.pow(e.target.value, 2), Math.pow(e.target.value, 4), Math.pow(e.target.value, 8), Math.pow(e.target.value, 16)]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderInput(), /*#__PURE__*/_jsxDEV(IterationList, {\n      iterations: iterations,\n      startingPoint: start,\n      array: array,\n      myStyle: \"sequence\",\n      color: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SquareNumbers, \"Mu+10r5FiTXhzzduyWtv+Q0bdWw=\");\n\n_c2 = SquareNumbers;\nexport default SquareNumbers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledStart\");\n$RefreshReg$(_c2, \"SquareNumbers\");","map":{"version":3,"sources":["/Users/calvinhnzr/Development/mandelbrotset/src/templates/SquareNumbers.js"],"names":["useState","getWindowDimensions","Slider","Input","Formula","IterationList","styled","StyledStart","span","SquareNumbers","props","start","setStart","array","setArray","width","iterations","max","min","renderInput","color","handleChange","e","preventDefault","target","value","toString","length","Math","pow"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,IAAK;AAChC;AACA;AACA;AACA;AACA,CALA;KAAMD,W;;AAON,MAAME,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEe,IAAAA;AAAF,MAAYd,mBAAmB,EAArC;AAEA,QAAMe,UAAU,GAAG,CAAnB;AACA,QAAMC,GAAG,GAAG,CAAZ;AACA,QAAMC,GAAG,GAAG,CAAZ;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACzB,QAAIJ,KAAK,IAAI,GAAb,EAAkB;AACjB,0BACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEL,KAAK,CAACU,KAAtB;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,QADN;AAEC,UAAA,GAAG,EAAC,GAFL;AAGC,UAAA,GAAG,EAAC,GAHL;AAIC,UAAA,WAAW,EAAC,KAJb;AAKC,UAAA,KAAK,EAAET,KALR;AAMC,UAAA,QAAQ,EAAEU;AANX;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAaA,KAdD,MAcO;AACN,0BACC;AAAA,gCACC,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEX,KAAK,CAACU,KAAtB;AAAA,iCACC;AAAA,oCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAGC,QAAC,WAAD;AAAA,wBACET,KAAK,GAAG,CAAR,GACAA,KADA,gBAGA;AAAM,gBAAA,KAAK,EAAE;AAAES,kBAAAA,KAAK,EAAE;AAAT,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,oBAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAcC,QAAC,MAAD;AACC,UAAA,GAAG,EAAEF,GADN;AAEC,UAAA,GAAG,EAAED,GAFN;AAGC,UAAA,IAAI,EAAC,GAHN;AAIC,UAAA,KAAK,EAAEN,KAJR;AAKC,UAAA,QAAQ,EAAEC,QALX;AAMC,UAAA,QAAQ,EAAES;AANX;AAAA;AAAA;AAAA;AAAA,gBAdD;AAAA,sBADD;AAyBA;AACD,GA1CD;;AA4CA,QAAMA,YAAY,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAID,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,QAAf,GAA0BC,MAA1B,IAAoC,CAAxC,EAA2Cf,QAAQ,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;;AAC3C,QAAIH,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,QAAf,GAA0BC,MAA1B,IAAoC,CAAxC,EAA2C;AAC1Cb,MAAAA,QAAQ,CAAC,CACRc,IAAI,CAACC,GAAL,CAASP,CAAC,CAACE,MAAF,CAASC,KAAlB,EAAyB,CAAzB,CADQ,EAERG,IAAI,CAACC,GAAL,CAASP,CAAC,CAACE,MAAF,CAASC,KAAlB,EAAyB,CAAzB,CAFQ,EAGRG,IAAI,CAACC,GAAL,CAASP,CAAC,CAACE,MAAF,CAASC,KAAlB,EAAyB,CAAzB,CAHQ,EAIRG,IAAI,CAACC,GAAL,CAASP,CAAC,CAACE,MAAF,CAASC,KAAlB,EAAyB,EAAzB,CAJQ,CAAD,CAAR;AAMA;AACD,GAXD;;AAaA,sBACC;AAAA,eACEN,WAAW,EADb,eAEC,QAAC,aAAD;AACC,MAAA,UAAU,EAAEH,UADb;AAEC,MAAA,aAAa,EAAEL,KAFhB;AAGC,MAAA,KAAK,EAAEE,KAHR;AAIC,MAAA,OAAO,EAAC,UAJT;AAKC,MAAA,KAAK,EAAEH,KAAK,CAACU;AALd;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAYA,CA9ED;;GAAMX,a;;MAAAA,a;AAgFN,eAAeA,aAAf","sourcesContent":["import { useState } from \"react\"\nimport getWindowDimensions from \"../hooks/useWindowDimensions\"\n\nimport Slider from \"../components/Slider\"\nimport Input from \"../components/Input\"\nimport Formula from \"../components/Formula\"\nimport IterationList from \"../components/IterationList\"\nimport styled from \"styled-components\"\n\nconst StyledStart = styled.span`\n\tbackground-color: #363738;\n\tborder-radius: 0.2rem;\n\tpadding: 0.5rem;\n\tfont-weight: bold;\n`\n\nconst SquareNumbers = (props) => {\n\tconst [start, setStart] = useState(\"\")\n\tconst [array, setArray] = useState([])\n\tconst { width } = getWindowDimensions()\n\n\tconst iterations = 4\n\tconst max = 9\n\tconst min = 0\n\n\tconst renderInput = () => {\n\t\tif (width >= 960) {\n\t\t\treturn (\n\t\t\t\t<Formula color={props.color}>\n\t\t\t\t\t<span>x = </span>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\tmax=\"9\"\n\t\t\t\t\t\tplaceholder=\"int\"\n\t\t\t\t\t\tvalue={start}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</Formula>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Formula color={props.color}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>x = </span>\n\n\t\t\t\t\t\t\t<StyledStart>\n\t\t\t\t\t\t\t\t{start > 0 ? (\n\t\t\t\t\t\t\t\t\tstart\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<span style={{ color: \"#8e8e8e\" }}>0</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</StyledStart>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Formula>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tmin={min}\n\t\t\t\t\t\tmax={max}\n\t\t\t\t\t\tstep=\"1\"\n\t\t\t\t\t\tvalue={start}\n\t\t\t\t\t\tsetStart={setStart}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n\n\tconst handleChange = (e) => {\n\t\te.preventDefault()\n\t\tif (e.target.value.toString().length <= 1) setStart(e.target.value)\n\t\tif (e.target.value.toString().length <= 1) {\n\t\t\tsetArray([\n\t\t\t\tMath.pow(e.target.value, 2),\n\t\t\t\tMath.pow(e.target.value, 4),\n\t\t\t\tMath.pow(e.target.value, 8),\n\t\t\t\tMath.pow(e.target.value, 16),\n\t\t\t])\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{renderInput()}\n\t\t\t<IterationList\n\t\t\t\titerations={iterations}\n\t\t\t\tstartingPoint={start}\n\t\t\t\tarray={array}\n\t\t\t\tmyStyle=\"sequence\"\n\t\t\t\tcolor={props.color}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport default SquareNumbers\n"]},"metadata":{},"sourceType":"module"}