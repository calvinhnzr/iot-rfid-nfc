{"ast":null,"code":"var _jsxFileName = \"/Users/calvinhnzr/Development/mandelbrotset/src/components/IterationList.js\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledList = styled.ol`\n\t/* outline: 1px solid white; */\n\tgrid-column: 2 / 12;\n\tgrid-row: 4 / 12;\n\theight: auto;\n\t&.sequence {\n\t\tgrid-row: 4 / 12;\n\t\tmargin-top: 2rem;\n\t}\n\t&.numberLine {\n\t\tgrid-row: 9 / 12;\n\t}\n\n\t@media only screen and (min-width: 960px) {\n\t\tmargin-top: 0;\n\n\t\t&.numberLine {\n\t\t\tgrid-row: 4 / 11;\n\t\t\tgrid-column: 2 / 5;\n\t\t}\n\t}\n`;\n_c = StyledList;\nconst StyledElements = styled.li`\n\twidth: fit-content;\n\tposition: relative;\n\tletter-spacing: 1px;\n\t&.sequence {\n\t\tfont-size: 1.7rem;\n\t\tmargin-bottom: 1.5rem;\n\t\tlist-style: none;\n\t\t&::after {\n\t\t\tfont-size: 1.3rem;\n\t\t}\n\t\t@media only screen and (min-width: 960px) {\n\t\t\tmargin-left: ${props => props.marginLeft}rem;\n\t\t\tmargin-bottom: 2.5rem;\n\t\t}\n\t}\n\n\t&.numberLine {\n\t\tfont-size: 1.2rem;\n\t\tfont-weight: 100;\n\t\tmargin-bottom: 1.5rem;\n\t\tline-height: 1.1;\n\t\tcounter-increment: item;\n\t\t&::before {\n\t\t\tdisplay: inline-block;\n\t\t\t/* width: 1em; */\n\t\t\tpadding-right: 0.5em;\n\t\t\tfont-weight: bold;\n\t\t\t/* text-align: right; */\n\t\t\tcontent: counter(item);\n\t\t}\n\t\t&::after {\n\t\t\tfont-size: 1rem;\n\t\t}\n\t}\n\n\t&::after {\n\t\tposition: absolute;\n\t\ttop: -0.8rem;\n\t\tright: -1.5rem;\n\t\tcontent: \"2\";\n\t\tfont-family: \"Roboto\";\n\t\tfont-weight: bold;\n\t\tcolor: ${props => props.color};\n\t}\n\n\t&:last-of-type {\n\t\t&::after {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n`;\n_c2 = StyledElements;\n\nconst IterationList = props => {\n  const myArr = [];\n  const numOfIterations = props.iterations;\n  let myStartingPoint = props.startingPoint;\n\n  for (let i = 0; i < numOfIterations; i++) {\n    myStartingPoint = Math.pow(myStartingPoint, 2);\n    myArr.push(myStartingPoint);\n  }\n\n  return /*#__PURE__*/_jsxDEV(StyledList, {\n    className: props.myStyle,\n    children: myStartingPoint !== 0 ? props.array.map((item, index) => /*#__PURE__*/_jsxDEV(StyledElements, {\n      className: props.myStyle,\n      marginLeft: 2 * (index + 3.2),\n      color: props.color,\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = IterationList;\nexport default IterationList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledList\");\n$RefreshReg$(_c2, \"StyledElements\");\n$RefreshReg$(_c3, \"IterationList\");","map":{"version":3,"sources":["/Users/calvinhnzr/Development/mandelbrotset/src/components/IterationList.js"],"names":["styled","StyledList","ol","StyledElements","li","props","marginLeft","color","IterationList","myArr","numOfIterations","iterations","myStartingPoint","startingPoint","i","Math","pow","push","myStyle","array","map","item","index"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,EAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CArBA;KAAMD,U;AAuBN,MAAME,cAAc,GAAGH,MAAM,CAACI,EAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAmBC,KAAD,IAAWA,KAAK,CAACC,UAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAYD,KAAD,IAAWA,KAAK,CAACE,KAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnDA;MAAMJ,c;;AAqDN,MAAMK,aAAa,GAAIH,KAAD,IAAW;AAChC,QAAMI,KAAK,GAAG,EAAd;AACA,QAAMC,eAAe,GAAGL,KAAK,CAACM,UAA9B;AACA,MAAIC,eAAe,GAAGP,KAAK,CAACQ,aAA5B;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,eAApB,EAAqCI,CAAC,EAAtC,EAA0C;AACzCF,IAAAA,eAAe,GAAGG,IAAI,CAACC,GAAL,CAASJ,eAAT,EAA0B,CAA1B,CAAlB;AACAH,IAAAA,KAAK,CAACQ,IAAN,CAAWL,eAAX;AACA;;AAED,sBACC,QAAC,UAAD;AAAY,IAAA,SAAS,EAAEP,KAAK,CAACa,OAA7B;AAAA,cACEN,eAAe,KAAK,CAApB,GACEP,KAAK,CAACc,KAAN,CAAYC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,kBAChB,QAAC,cAAD;AAEC,MAAA,SAAS,EAAEjB,KAAK,CAACa,OAFlB;AAGC,MAAA,UAAU,EAAE,KAAKI,KAAK,GAAG,GAAb,CAHb;AAIC,MAAA,KAAK,EAAEjB,KAAK,CAACE,KAJd;AAAA,gBAKEc;AALF,OACMC,KADN;AAAA;AAAA;AAAA;AAAA,YADA,CADF,GAUE;AAXJ;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CAzBD;;MAAMd,a;AA2BN,eAAeA,aAAf","sourcesContent":["import styled from \"styled-components\"\n\nconst StyledList = styled.ol`\n\t/* outline: 1px solid white; */\n\tgrid-column: 2 / 12;\n\tgrid-row: 4 / 12;\n\theight: auto;\n\t&.sequence {\n\t\tgrid-row: 4 / 12;\n\t\tmargin-top: 2rem;\n\t}\n\t&.numberLine {\n\t\tgrid-row: 9 / 12;\n\t}\n\n\t@media only screen and (min-width: 960px) {\n\t\tmargin-top: 0;\n\n\t\t&.numberLine {\n\t\t\tgrid-row: 4 / 11;\n\t\t\tgrid-column: 2 / 5;\n\t\t}\n\t}\n`\n\nconst StyledElements = styled.li`\n\twidth: fit-content;\n\tposition: relative;\n\tletter-spacing: 1px;\n\t&.sequence {\n\t\tfont-size: 1.7rem;\n\t\tmargin-bottom: 1.5rem;\n\t\tlist-style: none;\n\t\t&::after {\n\t\t\tfont-size: 1.3rem;\n\t\t}\n\t\t@media only screen and (min-width: 960px) {\n\t\t\tmargin-left: ${(props) => props.marginLeft}rem;\n\t\t\tmargin-bottom: 2.5rem;\n\t\t}\n\t}\n\n\t&.numberLine {\n\t\tfont-size: 1.2rem;\n\t\tfont-weight: 100;\n\t\tmargin-bottom: 1.5rem;\n\t\tline-height: 1.1;\n\t\tcounter-increment: item;\n\t\t&::before {\n\t\t\tdisplay: inline-block;\n\t\t\t/* width: 1em; */\n\t\t\tpadding-right: 0.5em;\n\t\t\tfont-weight: bold;\n\t\t\t/* text-align: right; */\n\t\t\tcontent: counter(item);\n\t\t}\n\t\t&::after {\n\t\t\tfont-size: 1rem;\n\t\t}\n\t}\n\n\t&::after {\n\t\tposition: absolute;\n\t\ttop: -0.8rem;\n\t\tright: -1.5rem;\n\t\tcontent: \"2\";\n\t\tfont-family: \"Roboto\";\n\t\tfont-weight: bold;\n\t\tcolor: ${(props) => props.color};\n\t}\n\n\t&:last-of-type {\n\t\t&::after {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n`\n\nconst IterationList = (props) => {\n\tconst myArr = []\n\tconst numOfIterations = props.iterations\n\tlet myStartingPoint = props.startingPoint\n\n\tfor (let i = 0; i < numOfIterations; i++) {\n\t\tmyStartingPoint = Math.pow(myStartingPoint, 2)\n\t\tmyArr.push(myStartingPoint)\n\t}\n\n\treturn (\n\t\t<StyledList className={props.myStyle}>\n\t\t\t{myStartingPoint !== 0\n\t\t\t\t? props.array.map((item, index) => (\n\t\t\t\t\t\t<StyledElements\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\tclassName={props.myStyle}\n\t\t\t\t\t\t\tmarginLeft={2 * (index + 3.2)}\n\t\t\t\t\t\t\tcolor={props.color}>\n\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t</StyledElements>\n\t\t\t\t  ))\n\t\t\t\t: null}\n\t\t</StyledList>\n\t)\n}\n\nexport default IterationList\n"]},"metadata":{},"sourceType":"module"}