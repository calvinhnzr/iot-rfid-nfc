{"ast":null,"code":"var _jsxFileName = \"/Users/calvinhnzr/Development/mandelbrotset/src/templates/OnNumberLine.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Html } from \"@react-three/drei\";\nimport styled from \"styled-components\";\nimport getWindowDimensions from \"../hooks/useWindowDimensions\";\nimport { roundNumber } from \"../helpers\";\nimport Slider from \"../components/Slider\";\nimport Input from \"../components/Input\";\nimport Formula from \"../components/Formula\";\nimport Scene from \"../components/three/Scene\";\nimport IterationList from \"../components/IterationList\";\nimport MyGrid from \"../components/threejs/MyGrid\";\nimport MyAxisX from \"../components/three/MyAxisX\";\nimport MyMesh from \"../components/threejs/MyMesh\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledStart = styled.span`\n\tbackground-color: #363738;\n\tborder-radius: 0.2rem;\n\tpadding: 0.5rem;\n\tfont-weight: bold;\n`;\n_c = StyledStart;\n\nconst OnNumberLine = props => {\n  _s();\n\n  const [start, setStart] = useState(\"\");\n  const [array, setArray] = useState([]);\n  const {\n    width\n  } = getWindowDimensions();\n  /*\n  let list = []\n  let myNum\n  for (let i = 2; i <= 16; i *= 2) {\n  \tmyNum = Math.pow(start, i)\n  \tlist.push(myNum)\n  }*/\n\n  const iterations = 4;\n  const min = -2;\n  const max = 2; // length of x axis\n\n  const length = [-2, -1, 1, 2];\n\n  const handleChange = e => {\n    e.preventDefault();\n    if (e.target.value.toString().length <= 5) setStart(e.target.value);\n    if (e.target.value.toString().length <= 5) setArray([Math.pow(e.target.value, 2), Math.pow(e.target.value, 4), Math.pow(e.target.value, 8), Math.pow(e.target.value, 16)]);\n  };\n\n  const renderInput = () => {\n    if (width >= 960) {\n      return /*#__PURE__*/_jsxDEV(Formula, {\n        color: props.color,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"x = \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          min: \"-2\",\n          max: \"2\",\n          placeholder: \"float\",\n          value: start,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Formula, {\n          color: props.color,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"x = \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(StyledStart, {\n              children: start !== 0 ? start : /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"#8e8e8e\"\n                },\n                children: \"0.00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          min: min,\n          max: max,\n          step: 0.01,\n          value: start,\n          setStart: setStart,\n          onChange: handleChange,\n          className: \"numberLine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [renderInput(), /*#__PURE__*/_jsxDEV(IterationList, {\n      iterations: iterations,\n      startingPoint: start,\n      array: array,\n      myStyle: \"numberLine\",\n      color: props.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Scene, {\n      control: true,\n      position: [0, 0, 7],\n      children: [start === \"0.97\" ? /*#__PURE__*/_jsxDEV(Html, {\n        center: true,\n        position: [0, 5, 10],\n        distanceFactor: 20,\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          style: {\n            width: \"4rem\"\n          },\n          children: \"I love you! \\u2764\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }, this) : null, /*#__PURE__*/_jsxDEV(MyAxisX, {\n        null: true,\n        length: length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MyGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MyMesh, {\n        position: [start, 0, 0],\n        size: 0.2,\n        color: \"#437ef1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), array.map((item, index) => /*#__PURE__*/_jsxDEV(MyMesh, {\n        position: [roundNumber(item), 0, 0],\n        size: 0.15,\n        color: \"#65D677\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OnNumberLine, \"Mu+10r5FiTXhzzduyWtv+Q0bdWw=\");\n\n_c2 = OnNumberLine;\nexport default OnNumberLine;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledStart\");\n$RefreshReg$(_c2, \"OnNumberLine\");","map":{"version":3,"sources":["/Users/calvinhnzr/Development/mandelbrotset/src/templates/OnNumberLine.js"],"names":["useState","Html","styled","getWindowDimensions","roundNumber","Slider","Input","Formula","Scene","IterationList","MyGrid","MyAxisX","MyMesh","StyledStart","span","OnNumberLine","props","start","setStart","array","setArray","width","iterations","min","max","length","handleChange","e","preventDefault","target","value","toString","Math","pow","renderInput","color","map","item","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AAEA,SAASC,WAAT,QAA4B,YAA5B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;;AAEA,MAAMC,WAAW,GAAGX,MAAM,CAACY,IAAK;AAChC;AACA;AACA;AACA;AACA,CALA;KAAMD,W;;AAON,MAAME,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAYlB,mBAAmB,EAArC;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;;AAEC,QAAMmB,UAAU,GAAG,CAAnB;AACA,QAAMC,GAAG,GAAG,CAAC,CAAb;AACA,QAAMC,GAAG,GAAG,CAAZ,CAf+B,CAgB/B;;AACA,QAAMC,MAAM,GAAG,CAAC,CAAC,CAAF,EAAK,CAAC,CAAN,EAAS,CAAT,EAAY,CAAZ,CAAf;;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAID,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,QAAf,GAA0BN,MAA1B,IAAoC,CAAxC,EAA2CP,QAAQ,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AAE3C,QAAIH,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,QAAf,GAA0BN,MAA1B,IAAoC,CAAxC,EACCL,QAAQ,CAAC,CACRY,IAAI,CAACC,GAAL,CAASN,CAAC,CAACE,MAAF,CAASC,KAAlB,EAAyB,CAAzB,CADQ,EAERE,IAAI,CAACC,GAAL,CAASN,CAAC,CAACE,MAAF,CAASC,KAAlB,EAAyB,CAAzB,CAFQ,EAGRE,IAAI,CAACC,GAAL,CAASN,CAAC,CAACE,MAAF,CAASC,KAAlB,EAAyB,CAAzB,CAHQ,EAIRE,IAAI,CAACC,GAAL,CAASN,CAAC,CAACE,MAAF,CAASC,KAAlB,EAAyB,EAAzB,CAJQ,CAAD,CAAR;AAMD,GAZD;;AAcA,QAAMI,WAAW,GAAG,MAAM;AACzB,QAAIb,KAAK,IAAI,GAAb,EAAkB;AACjB,0BACC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEL,KAAK,CAACmB,KAAtB;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,QADN;AAEC,UAAA,GAAG,EAAC,IAFL;AAGC,UAAA,GAAG,EAAC,GAHL;AAIC,UAAA,WAAW,EAAC,OAJb;AAKC,UAAA,KAAK,EAAElB,KALR;AAMC,UAAA,QAAQ,EAAES;AANX;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAaA,KAdD,MAcO;AACN,0BACC;AAAA,gCACC,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEV,KAAK,CAACmB,KAAtB;AAAA,iCACC;AAAA,oCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,eAEC,QAAC,WAAD;AAAA,wBACElB,KAAK,KAAK,CAAV,GACAA,KADA,gBAGA;AAAM,gBAAA,KAAK,EAAE;AAAEkB,kBAAAA,KAAK,EAAE;AAAT,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,oBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAeC,QAAC,MAAD;AACC,UAAA,GAAG,EAAEZ,GADN;AAEC,UAAA,GAAG,EAAEC,GAFN;AAGC,UAAA,IAAI,EAAE,IAHP;AAIC,UAAA,KAAK,EAAEP,KAJR;AAKC,UAAA,QAAQ,EAAEC,QALX;AAMC,UAAA,QAAQ,EAAEQ,YANX;AAOC,UAAA,SAAS,EAAC;AAPX;AAAA;AAAA;AAAA;AAAA,gBAfD;AAAA,sBADD;AA2BA;AACD,GA5CD;;AA8CA,sBACC;AAAA,eACEQ,WAAW,EADb,eAEC,QAAC,aAAD;AACC,MAAA,UAAU,EAAEZ,UADb;AAEC,MAAA,aAAa,EAAEL,KAFhB;AAGC,MAAA,KAAK,EAAEE,KAHR;AAIC,MAAA,OAAO,EAAC,YAJT;AAKC,MAAA,KAAK,EAAEH,KAAK,CAACmB;AALd;AAAA;AAAA;AAAA;AAAA,YAFD,eASC,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAzB;AAAA,iBACElB,KAAK,KAAK,MAAV,gBACA,QAAC,IAAD;AACC,QAAA,MAAM,EAAE,IADT;AAEC,QAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAFX;AAGC,QAAA,cAAc,EAAE,EAHjB;AAAA,+BAIC;AAAI,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,cADA,GAOG,IARL,eAUC,QAAC,OAAD;AAAS,QAAA,IAAI,MAAb;AAAc,QAAA,MAAM,EAAEI;AAAtB;AAAA;AAAA;AAAA;AAAA,cAVD,eAWC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAXD,eAYC,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAACR,KAAD,EAAQ,CAAR,EAAW,CAAX,CAAlB;AAAiC,QAAA,IAAI,EAAE,GAAvC;AAA4C,QAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,cAZD,EAaEE,KAAK,CAACiB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACV,QAAC,MAAD;AAEC,QAAA,QAAQ,EAAE,CAAClC,WAAW,CAACiC,IAAD,CAAZ,EAAoB,CAApB,EAAuB,CAAvB,CAFX;AAGC,QAAA,IAAI,EAAE,IAHP;AAIC,QAAA,KAAK,EAAC;AAJP,SACMC,KADN;AAAA;AAAA;AAAA;AAAA,cADA,CAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YATD;AAAA,kBADD;AAkCA,CAjHD;;GAAMvB,Y;;MAAAA,Y;AAmHN,eAAeA,YAAf","sourcesContent":["import { useState } from \"react\"\nimport { Html } from \"@react-three/drei\"\nimport styled from \"styled-components\"\nimport getWindowDimensions from \"../hooks/useWindowDimensions\"\n\nimport { roundNumber } from \"../helpers\"\n\nimport Slider from \"../components/Slider\"\nimport Input from \"../components/Input\"\nimport Formula from \"../components/Formula\"\nimport Scene from \"../components/three/Scene\"\nimport IterationList from \"../components/IterationList\"\n\nimport MyGrid from \"../components/threejs/MyGrid\"\nimport MyAxisX from \"../components/three/MyAxisX\"\nimport MyMesh from \"../components/threejs/MyMesh\"\n\nconst StyledStart = styled.span`\n\tbackground-color: #363738;\n\tborder-radius: 0.2rem;\n\tpadding: 0.5rem;\n\tfont-weight: bold;\n`\n\nconst OnNumberLine = (props) => {\n\tconst [start, setStart] = useState(\"\")\n\tconst [array, setArray] = useState([])\n\tconst { width } = getWindowDimensions()\n\n\t/*\n\tlet list = []\n\tlet myNum\n\tfor (let i = 2; i <= 16; i *= 2) {\n\t\tmyNum = Math.pow(start, i)\n\t\tlist.push(myNum)\n\t}*/\n\n\tconst iterations = 4\n\tconst min = -2\n\tconst max = 2\n\t// length of x axis\n\tconst length = [-2, -1, 1, 2]\n\n\tconst handleChange = (e) => {\n\t\te.preventDefault()\n\n\t\tif (e.target.value.toString().length <= 5) setStart(e.target.value)\n\n\t\tif (e.target.value.toString().length <= 5)\n\t\t\tsetArray([\n\t\t\t\tMath.pow(e.target.value, 2),\n\t\t\t\tMath.pow(e.target.value, 4),\n\t\t\t\tMath.pow(e.target.value, 8),\n\t\t\t\tMath.pow(e.target.value, 16),\n\t\t\t])\n\t}\n\n\tconst renderInput = () => {\n\t\tif (width >= 960) {\n\t\t\treturn (\n\t\t\t\t<Formula color={props.color}>\n\t\t\t\t\t<span>x = </span>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tmin=\"-2\"\n\t\t\t\t\t\tmax=\"2\"\n\t\t\t\t\t\tplaceholder=\"float\"\n\t\t\t\t\t\tvalue={start}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</Formula>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<Formula color={props.color}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>x = </span>\n\t\t\t\t\t\t\t<StyledStart>\n\t\t\t\t\t\t\t\t{start !== 0 ? (\n\t\t\t\t\t\t\t\t\tstart\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<span style={{ color: \"#8e8e8e\" }}>\n\t\t\t\t\t\t\t\t\t\t0.00\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</StyledStart>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Formula>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tmin={min}\n\t\t\t\t\t\tmax={max}\n\t\t\t\t\t\tstep={0.01}\n\t\t\t\t\t\tvalue={start}\n\t\t\t\t\t\tsetStart={setStart}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tclassName=\"numberLine\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{renderInput()}\n\t\t\t<IterationList\n\t\t\t\titerations={iterations}\n\t\t\t\tstartingPoint={start}\n\t\t\t\tarray={array}\n\t\t\t\tmyStyle=\"numberLine\"\n\t\t\t\tcolor={props.color}\n\t\t\t/>\n\t\t\t<Scene control position={[0, 0, 7]}>\n\t\t\t\t{start === \"0.97\" ? (\n\t\t\t\t\t<Html\n\t\t\t\t\t\tcenter={true}\n\t\t\t\t\t\tposition={[0, 5, 10]}\n\t\t\t\t\t\tdistanceFactor={20}>\n\t\t\t\t\t\t<h6 style={{ width: \"4rem\" }}>I love you! ❤️</h6>\n\t\t\t\t\t</Html>\n\t\t\t\t) : null}\n\n\t\t\t\t<MyAxisX null length={length} />\n\t\t\t\t<MyGrid />\n\t\t\t\t<MyMesh position={[start, 0, 0]} size={0.2} color=\"#437ef1\" />\n\t\t\t\t{array.map((item, index) => (\n\t\t\t\t\t<MyMesh\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tposition={[roundNumber(item), 0, 0]}\n\t\t\t\t\t\tsize={0.15}\n\t\t\t\t\t\tcolor=\"#65D677\"\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</Scene>\n\t\t</>\n\t)\n}\n\nexport default OnNumberLine\n"]},"metadata":{},"sourceType":"module"}